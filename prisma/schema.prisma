datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String?  @unique
  passwordHash  String
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  provider          String
  providerAccountId String
  accessToken       String?
  refreshToken      String?
  expiresAt         Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id        String   @id @default(uuid())
  sessionToken String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  expires   DateTime
}

model VerificationToken {
  id        String   @id @default(uuid())
  identifier String
  token     String   @unique
  expires   DateTime

  @@unique([identifier, token])
<<<<<<< Updated upstream
}
=======
}

model Event {
  id            String   @id @default(uuid())
  name         String
  description   String
  tagline       String
  date          DateTime
  eventMedia    EventMedia[]
  externalLink  String?
  userId        String
  createdById   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user         User     @relation(fields: [userId], references: [id])
}

model EventMedia {
  id        String   @id @default(uuid())
  eventId   String
  imageURL  String?
  videoURL  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event     Event    @relation(fields: [eventId], references: [id])
}

model Site {
  id            String   @id @default(uuid())
  name          String
  userId        String
  description   String
  tagline       String
  imageURL      String?
  videoURL      String?
  externalLink  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user         User     @relation(fields: [userId], references: [id])
}
>>>>>>> Stashed changes
